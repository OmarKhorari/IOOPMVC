// <auto-generated />
using System;
using IOOPMVC.Repository.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IOOPMVC.Repository.Migrations
{
    [DbContext(typeof(IOOPPContext))]
    partial class IOOPPContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IOOPMVC.Repository.DataBase.Absence", b =>
                {
                    b.Property<int>("IdAbsence")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_Absence")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateDebut")
                        .HasColumnName("Date_Debut")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DateFin")
                        .HasColumnName("Date_Fin")
                        .HasColumnType("date");

                    b.Property<int?>("IdPersonne")
                        .HasColumnName("ID_Personne")
                        .HasColumnType("int");

                    b.Property<string>("Justification")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("IdAbsence");

                    b.ToTable("Absence");
                });

            modelBuilder.Entity("IOOPMVC.Repository.DataBase.Adresse", b =>
                {
                    b.Property<int>("IdAdresse")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_Adresse")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresse1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Adresse2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Cp")
                        .HasColumnName("CP")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Pays")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Région")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Ville")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("IdAdresse")
                        .HasName("PK__Adresse__44E01E6E4A6E5BCC");

                    b.ToTable("Adresse");
                });

            modelBuilder.Entity("IOOPMVC.Repository.DataBase.AnneeScolaire", b =>
                {
                    b.Property<int>("IdAnneeScolaire")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_AnneeScolaire")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomAnneeScolaire")
                        .HasColumnName("Nom_AnneeScolaire")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("IdAnneeScolaire");

                    b.ToTable("AnneeScolaire");
                });

            modelBuilder.Entity("IOOPMVC.Repository.DataBase.Classe", b =>
                {
                    b.Property<int>("IdClasse")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_Classe")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodeClase")
                        .HasColumnName("Code_Clase")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<string>("NomClasse")
                        .HasColumnName("Nom_Classe")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.HasKey("IdClasse");

                    b.ToTable("Classe");
                });

            modelBuilder.Entity("IOOPMVC.Repository.DataBase.Cours", b =>
                {
                    b.Property<int>("IdCours")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_Cours")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateCours")
                        .HasColumnName("Date_Cours")
                        .HasColumnType("date");

                    b.Property<string>("HeureCours")
                        .HasColumnName("Heure_Cours")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<int?>("IdClasse")
                        .HasColumnName("ID_Classe")
                        .HasColumnType("int");

                    b.Property<int?>("IdEmployee")
                        .HasColumnName("ID_Employee")
                        .HasColumnType("int");

                    b.Property<int?>("IdMatiere")
                        .HasColumnName("ID_Matiere")
                        .HasColumnType("int");

                    b.HasKey("IdCours");

                    b.ToTable("Cours");
                });

            modelBuilder.Entity("IOOPMVC.Repository.DataBase.Employee", b =>
                {
                    b.Property<int>("IdEmployee")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_Employee")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateEmbauce")
                        .HasColumnName("Date_Embauce")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DateFinContrat")
                        .HasColumnName("Date_Fin_Contrat")
                        .HasColumnType("date");

                    b.Property<string>("DiplômeMax")
                        .HasColumnName("Diplôme_Max")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Expérience")
                        .HasColumnType("int");

                    b.Property<int>("IdAdresse")
                        .HasColumnName("ID_Adresse")
                        .HasColumnType("int");

                    b.Property<int?>("IdFiliere")
                        .HasColumnName("ID_Filiere")
                        .HasColumnType("int");

                    b.Property<int>("IdPersonne")
                        .HasColumnName("ID_Personne")
                        .HasColumnType("int");

                    b.Property<int>("IdProfession")
                        .HasColumnName("ID_Profession")
                        .HasColumnType("int");

                    b.Property<string>("NiveauEtude")
                        .HasColumnName("Niveau_Etude")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<double?>("Salaire")
                        .HasColumnType("float");

                    b.Property<string>("Statut")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.HasKey("IdEmployee")
                        .HasName("PK__Employee__D9EE4F361E0533CF");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("IOOPMVC.Repository.DataBase.Etablissement", b =>
                {
                    b.Property<int>("IdEtablissement")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_Etablissement")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AvisCommission")
                        .HasColumnName("Avis_Commission")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CadreRésponsable")
                        .HasColumnName("Cadre_Résponsable")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("DateAutorisation")
                        .HasColumnName("Date_Autorisation")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DateAvis")
                        .HasColumnName("Date_Avis")
                        .HasColumnType("date");

                    b.Property<int>("IdAdresse")
                        .HasColumnName("ID_Adresse")
                        .HasColumnType("int");

                    b.Property<int>("IdEmployee")
                        .HasColumnName("ID_Employee")
                        .HasColumnType("int");

                    b.Property<string>("NomEtablissement")
                        .HasColumnName("Nom_Etablissement")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("NuméroAutorisation")
                        .HasColumnName("Numéro_Autorisation")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Sigle")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("IdEtablissement")
                        .HasName("PK__Etabliss__89523A02222E4561");

                    b.HasIndex("IdAdresse");

                    b.ToTable("Etablissement");
                });

            modelBuilder.Entity("IOOPMVC.Repository.DataBase.Etudiant", b =>
                {
                    b.Property<int>("IdEtudiant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_Etudiant")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdAdresse")
                        .HasColumnName("ID_Adresse")
                        .HasColumnType("int");

                    b.Property<int>("IdFiliere")
                        .HasColumnName("ID_Filiere")
                        .HasColumnType("int");

                    b.Property<int>("IdPersonne")
                        .HasColumnName("ID_Personne")
                        .HasColumnType("int");

                    b.Property<string>("Matricule")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("NiveauEtudeMère")
                        .HasColumnName("Niveau_Etude_Mère")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("NiveauEtudePère")
                        .HasColumnName("Niveau_Etude_Père")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("NomMère")
                        .HasColumnName("Nom_Mère")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("NomPère")
                        .HasColumnName("Nom_Père")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProfessionMère")
                        .HasColumnName("Profession_Mère")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProfessionPère")
                        .HasColumnName("Profession_Père")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("IdEtudiant")
                        .HasName("PK__Etudiant__635FC9BCB33D3D5A");

                    b.HasIndex("IdAdresse");

                    b.HasIndex("IdFiliere");

                    b.HasIndex("IdPersonne");

                    b.ToTable("Etudiant");
                });

            modelBuilder.Entity("IOOPMVC.Repository.DataBase.Filiere", b =>
                {
                    b.Property<int>("IdFiliere")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_Filiere")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CapacitéFiliere")
                        .HasColumnName("Capacité_Filiere")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("DateQualification")
                        .HasColumnName("Date_Qualification")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("DureEnAnnée")
                        .HasColumnName("Dure_En_Année")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("IdAdresse")
                        .HasColumnName("ID_Adresse")
                        .HasColumnType("int");

                    b.Property<int?>("IdEtablissement")
                        .HasColumnName("ID_Etablissement")
                        .HasColumnType("int");

                    b.Property<string>("NiveauFiliere")
                        .HasColumnName("Niveau_Filiere")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("NomFiliere")
                        .HasColumnName("Nom_Filiere")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("IdFiliere")
                        .HasName("PK__Filiere__8DFF9D41FA51711F");

                    b.HasIndex("IdEtablissement");

                    b.ToTable("Filiere");
                });

            modelBuilder.Entity("IOOPMVC.Repository.DataBase.Inscription", b =>
                {
                    b.Property<int>("IdInscription")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_Inscription")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateInscription")
                        .HasColumnName("Date_Inscription")
                        .HasColumnType("date");

                    b.Property<int?>("IdAnneeScolaire")
                        .HasColumnName("ID_AnneeScolaire")
                        .HasColumnType("int");

                    b.Property<int?>("IdEtudiant")
                        .HasColumnName("ID_Etudiant")
                        .HasColumnType("int");

                    b.Property<int?>("IdModule")
                        .HasColumnName("ID_Module")
                        .HasColumnType("int");

                    b.Property<double?>("Montant")
                        .HasColumnType("float");

                    b.HasKey("IdInscription");

                    b.ToTable("Inscription");
                });

            modelBuilder.Entity("IOOPMVC.Repository.DataBase.Matiere", b =>
                {
                    b.Property<int>("IdMatiere")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_Matiere")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodeMatiere")
                        .HasColumnName("Code_Matiere")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("IdModule")
                        .HasColumnName("ID_Module")
                        .HasColumnType("int");

                    b.Property<string>("NomMatiere")
                        .HasColumnName("Nom_matiere")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("IdMatiere");

                    b.HasIndex("IdModule");

                    b.ToTable("Matiere");
                });

            modelBuilder.Entity("IOOPMVC.Repository.DataBase.MatiereEtudiant", b =>
                {
                    b.Property<int>("IdCoursEtudiant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_CoursEtudiant")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Dispense")
                        .HasColumnType("bit");

                    b.Property<int?>("IdEtudiant")
                        .HasColumnName("ID_Etudiant")
                        .HasColumnType("int");

                    b.Property<int?>("IdMatiere")
                        .HasColumnName("ID_Matiere")
                        .HasColumnType("int");

                    b.HasKey("IdCoursEtudiant")
                        .HasName("PK_CoursEtudiant");

                    b.HasIndex("IdEtudiant");

                    b.HasIndex("IdMatiere");

                    b.ToTable("MatiereEtudiant");
                });

            modelBuilder.Entity("IOOPMVC.Repository.DataBase.ModePaiement", b =>
                {
                    b.Property<int>("IdModePaiement")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_ModePaiement")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomModePaiement")
                        .HasColumnName("Nom_ModePaiement")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("IdModePaiement");

                    b.ToTable("ModePaiement");
                });

            modelBuilder.Entity("IOOPMVC.Repository.DataBase.Module", b =>
                {
                    b.Property<int>("IdModule")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_Module")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomModule")
                        .HasColumnName("Nom_Module")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("IdModule");

                    b.ToTable("Module");
                });

            modelBuilder.Entity("IOOPMVC.Repository.DataBase.Notes", b =>
                {
                    b.Property<int>("IdNote")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_Note")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdAnneeScolaire")
                        .HasColumnName("ID_AnneeScolaire")
                        .HasColumnType("int");

                    b.Property<int?>("IdEtudiant")
                        .HasColumnName("ID_Etudiant")
                        .HasColumnType("int");

                    b.Property<int?>("IdMatiere")
                        .HasColumnName("ID_Matiere")
                        .HasColumnType("int");

                    b.Property<double?>("Note")
                        .HasColumnType("float");

                    b.HasKey("IdNote");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("IOOPMVC.Repository.DataBase.Paiement", b =>
                {
                    b.Property<int>("IdPaiement")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_Paiement")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DatePaiement")
                        .HasColumnName("Date_Paiement")
                        .HasColumnType("date");

                    b.Property<int?>("IdInscription")
                        .HasColumnName("ID_Inscription")
                        .HasColumnType("int");

                    b.Property<int?>("IdModePaiement")
                        .HasColumnName("ID_ModePaiement")
                        .HasColumnType("int");

                    b.Property<double?>("Montant")
                        .HasColumnType("float");

                    b.HasKey("IdPaiement");

                    b.HasIndex("IdInscription");

                    b.HasIndex("IdModePaiement");

                    b.ToTable("Paiement");
                });

            modelBuilder.Entity("IOOPMVC.Repository.DataBase.Personne", b =>
                {
                    b.Property<int>("IdPersonne")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_Personne")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Cin")
                        .IsRequired()
                        .HasColumnName("CIN")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DateNaissance")
                        .HasColumnName("Date_Naissance")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Gsm")
                        .HasColumnName("GSM")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Nationalité")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Prénom")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Sexe")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Téléphone")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("IdPersonne")
                        .HasName("PK__Personne__11988C362E719AAA");

                    b.ToTable("Personne");
                });

            modelBuilder.Entity("IOOPMVC.Repository.DataBase.Profession", b =>
                {
                    b.Property<int>("IdProfession")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_Profession")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomProfession")
                        .HasColumnName("Nom_Profession")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.HasKey("IdProfession")
                        .HasName("PK__Professi__9AA7A320BBCCE709");

                    b.ToTable("Profession");
                });

            modelBuilder.Entity("IOOPMVC.Repository.DataBase.UserLogin", b =>
                {
                    b.Property<string>("UserEmail")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserPassword")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserEmail");

                    b.ToTable("UserLogin");
                });

            modelBuilder.Entity("IOOPMVC.Repository.DataBase.Etablissement", b =>
                {
                    b.HasOne("IOOPMVC.Repository.DataBase.Adresse", "IdAdresseNavigation")
                        .WithMany("Etablissement")
                        .HasForeignKey("IdAdresse")
                        .HasConstraintName("FK_AdrsEtablissement")
                        .IsRequired();
                });

            modelBuilder.Entity("IOOPMVC.Repository.DataBase.Etudiant", b =>
                {
                    b.HasOne("IOOPMVC.Repository.DataBase.Adresse", "IdAdresseNavigation")
                        .WithMany("Etudiant")
                        .HasForeignKey("IdAdresse")
                        .HasConstraintName("FK_AdrsEtudiant")
                        .IsRequired();

                    b.HasOne("IOOPMVC.Repository.DataBase.Filiere", "IdFiliereNavigation")
                        .WithMany("Etudiant")
                        .HasForeignKey("IdFiliere")
                        .HasConstraintName("FK_FiliereEtudiant")
                        .IsRequired();

                    b.HasOne("IOOPMVC.Repository.DataBase.Personne", "IdPersonneNavigation")
                        .WithMany("Etudiant")
                        .HasForeignKey("IdPersonne")
                        .HasConstraintName("FK_PersEtudiant")
                        .IsRequired();
                });

            modelBuilder.Entity("IOOPMVC.Repository.DataBase.Filiere", b =>
                {
                    b.HasOne("IOOPMVC.Repository.DataBase.Etablissement", "IdEtablissementNavigation")
                        .WithMany("Filiere")
                        .HasForeignKey("IdEtablissement")
                        .HasConstraintName("FK_EtabFiliere");
                });

            modelBuilder.Entity("IOOPMVC.Repository.DataBase.Matiere", b =>
                {
                    b.HasOne("IOOPMVC.Repository.DataBase.Module", "IdModuleNavigation")
                        .WithMany("Matiere")
                        .HasForeignKey("IdModule")
                        .HasConstraintName("FK_ModuleMatiere");
                });

            modelBuilder.Entity("IOOPMVC.Repository.DataBase.MatiereEtudiant", b =>
                {
                    b.HasOne("IOOPMVC.Repository.DataBase.Etudiant", "IdEtudiantNavigation")
                        .WithMany("MatiereEtudiant")
                        .HasForeignKey("IdEtudiant")
                        .HasConstraintName("FK_MatiereEtudiant_Etudiant");

                    b.HasOne("IOOPMVC.Repository.DataBase.Matiere", "IdMatiereNavigation")
                        .WithMany("MatiereEtudiant")
                        .HasForeignKey("IdMatiere")
                        .HasConstraintName("MatiereEtudiant_Matiere");
                });

            modelBuilder.Entity("IOOPMVC.Repository.DataBase.Paiement", b =>
                {
                    b.HasOne("IOOPMVC.Repository.DataBase.Inscription", "IdInscriptionNavigation")
                        .WithMany("Paiement")
                        .HasForeignKey("IdInscription")
                        .HasConstraintName("InscriptionPaiement");

                    b.HasOne("IOOPMVC.Repository.DataBase.ModePaiement", "IdModePaiementNavigation")
                        .WithMany("Paiement")
                        .HasForeignKey("IdModePaiement")
                        .HasConstraintName("ModePaiementPaiement");
                });
#pragma warning restore 612, 618
        }
    }
}
